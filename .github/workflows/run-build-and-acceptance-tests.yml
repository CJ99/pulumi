on:
  repository_dispatch:
    types: [ run-acceptance-tests-command ]
  pull_request:
    paths-ignore:
      - 'CHANGELOG.md'
      - 'CHANGELOG_PENDING.md'

env:
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_PROD_ACCESS_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PULUMI_TEST_OWNER: "moolumi"

jobs:
  comment-notification:
    # We only care about adding the result to the PR if it's a repository_dispatch event
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Create URL to the run output
        id: vars
        run: echo ::set-output name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
      - name: Update with Result
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            Please view the results of the PR Build + Acceptance Tests Run [Here][1]

            [1]: ${{ steps.vars.outputs.run-url }}
  lint:
    container: golangci/golangci-lint:latest
    name: Lint ${{ matrix.directory }}
    strategy:
      matrix:
        directory: [ sdk, pkg, tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Lint ${{ matrix.directory }}
        run: |
          cd ${{ matrix.directory }} && golangci-lint run -c ../.golangci.yml
  build_and_test:
    name: Build & Test
    defaults:
      run:
        shell: bash
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        go-version: [1.16.x]
        python-version: [ 3.9.x ]
        dotnet-version: [ 3.1.x ]
        node-version: [ 14.x ]
        include:
          - platform: windows-latest
            node-modules: "D:\\Pulumi\\nuget\\node_modules"
            local-nuget: "D:\\Pulumi\\nuget"
            root: "D:\\Pulumi"
            binary-root: "D:\\Pulumi\\bin"
          - platform: ubuntu-latest
            node-modules: $HOME/opt/pulumi/node_modules
            local-nuget: $HOME/opt/pulumi/nuget
            root: $HOME/opt/pulumi
            binary-root: $HOME/opt/pulumi/bin
          - platform: macos-latest
            node-modules: $HOME/opt/pulumi/node_modules
            local-nuget: $HOME/opt/pulumi/nuget
            root: $HOME/opt/pulumi
            binary-root: $HOME/opt/pulumi/bin
    if: github.event_name == 'repository_dispatch' || github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ${{ matrix.platform }}
    steps:
      - name: setup job specific env vars
        run: |
          echo "PULUMI_NODE_MODULES=${{ matrix.node-modules }}" >> $GITHUB_ENV
          echo "PULUMI_LOCAL_NUGET=${{ matrix.local-nuget }}" >> $GITHUB_ENV
          echo "PULUMI_ROOT=${{ matrix.root }}" >> $GITHUB_ENV
          echo "PULUMI_BINARY_ROOT=${{ matrix.binary- }}" >> $GITHUB_ENV
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Ensure PULUMI_LOCAL_NUGET exists
        run: mkdir -p $PULUMI_LOCAL_NUGET
      - run: dotnet nuget add source $PULUMI_LOCAL_NUGET
      - name: Set up Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install pipenv
        uses: dschep/install-pipenv-action@v1
      - name: Setup git
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
      - name: Update path
        run: |
          echo "$PULUMI_BINARY_ROOT" >> $GITHUB_PATH
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Fetch Tags
        run: |
          git fetch --quiet --prune --unshallow --tags
      - name: Set Go Dep path
        run: |
          echo "PULUMI_GO_DEP_ROOT=$(dirname $(pwd))" >> $GITHUB_ENV
      - name: Install pulumictl
        uses: jaxxstorm/action-install-gh-release@v1.2.0
        with:
          repo: pulumi/pulumictl
      - run: dotnet nuget locals all --clear
      - if: contains(matrix.platform, 'windows')
        run: |
          pip3 install pyenv-win
          pip3 install pipenv
      - name: Ensure
        run: |
          make ensure
      - name: Dist
        run: |
          make dist
      - name: Install
        run: |
          make install_all
      - name: Test
        run: make test_all
